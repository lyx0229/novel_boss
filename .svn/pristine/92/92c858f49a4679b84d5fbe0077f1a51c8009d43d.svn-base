package com.novel.web.admin.controller;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONObject;
import com.novel.web.admin.entity.JSONResponse;
import com.novel.web.admin.entity.Novel;
import com.novel.web.admin.service.NovelCmsService;
import com.novel.web.boss.common.tools.PageableTools;
import com.novel.web.boss.common.tools.SortDto;
import com.novel.web.boss.entity.UserPO;
import com.novel.web.common.utils.Util;

/**
 * 小说管理信息
 * @author Administrator
 *
 */
@RestController
@RequestMapping("/novel")
public class NovelCmsController {
	Logger logger = LoggerFactory.getLogger(NovelCmsController.class); 
	@Autowired
	NovelCmsService novelCmsService;
	 /**
		 * 进入页面
		 * 
		 * @return
		 */
		@RequestMapping("/novel_main")
		public ModelAndView getFinancialMain() {
			ModelAndView model = new ModelAndView("html/novel/novel_list");
			return model;
		}
		/**
		 * 小说列表查询
		 * 
		 * @return
		 */
		@RequestMapping(value = "/novellist", method = RequestMethod.POST)
		public JSONResponse queryFinancialInfo(HttpServletRequest request) {
			JSONObject json =new JSONObject();
			String param1 = request.getParameter("pageSize");
			String param2 = request.getParameter("currentPage");
			String novel_name = request.getParameter("searchName");
			int sex_status = Util.toInt(request.getParameter("searchSexStatus"));
			int type_status = Util.toInt(request.getParameter("searchTypeStatus"));
			int novel_state = Util.toInt(request.getParameter("searchNovelStatus"));
			int hot_status = Util.toInt(request.getParameter("searchHotStatus"));
			int pageSize = Integer.valueOf(param1);
			int currentPage = Integer.valueOf(param2);
			Novel po = new Novel();
			po.setNovel_name(novel_name);
			po.setSex_status(sex_status);
			po.setNovel_state(novel_state);
			po.setType_status(type_status);
			po.setHot_status(hot_status);
			Page<Novel> datas = novelCmsService.findNovelByCondition(po,
					PageableTools.basicPage(currentPage, pageSize, new SortDto("id")));
			json.put("novellist", datas);// 
			return JSONResponse.success(json);
		}
		
		/**
		 * 小说添加
		 * 
		 * @return
		 */
		@RequestMapping(value = "/add_novel", method = RequestMethod.POST)
		public JSONResponse add_novel(HttpServletRequest request){
			UserPO user = (UserPO)request.getSession().getAttribute("userInfo");
			if(user==null){
				return JSONResponse.error("请重新登陆");
			}
			String param = request.getParameter("novelPO");
			JSONObject jsonObject = JSONObject.parseObject(param);
			Novel po = (Novel) JSONObject.toJavaObject(jsonObject, Novel.class);
			po.setNovel_update_time(new Date());
			novelCmsService.saveAndUpdate(po);
			return JSONResponse.success(po);
		}
		
		/**
		 * 删除小说
		 * 
		 * @return
		 */
		@RequestMapping("/del_novel")
		public JSONResponse del_novel(HttpServletRequest request) {
			String idstr = request.getParameter("id");
			int id=0;
			if(null != idstr){
				id=Integer.valueOf(idstr);
			}
			novelCmsService.deleteById(id);
			return JSONResponse.success("操作成功");
		}
		
		/**
		 * 小说查询
		 * 
		 * @return
		 */
		@RequestMapping(value = "/get_novel", method = RequestMethod.POST)
		public JSONResponse get_novel(HttpServletRequest request) {
			int id = Util.toInt(request.getParameter("id"));
			logger.info("id"+id);
			Novel po = novelCmsService.findNovelById(id);
			return JSONResponse.success(po);
		}
		
}
